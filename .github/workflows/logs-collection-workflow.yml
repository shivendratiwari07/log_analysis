name: Log Collection and Analysis Workflow

on:
  workflow_run:
    workflows: ["Main CI Workflow"]
    types:
      - completed

permissions:
  actions: read
  contents: read
  checks: write  # Ensure the workflow has permissions to create and update check runs

jobs:
  collect-logs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv myenv
          source myenv/bin/activate
          pip install requests azure-storage-blob jq

      - name: List files in workspace (after checkout)
        run: ls -la

      - name: Verify run_id.txt content
        run: cat run_id.txt

      - name: Upload logs and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          CUSTOM_SERVICE_COOKIE: ${{ secrets.CUSTOM_SERVICE_COOKIE }}
        run: |
          source myenv/bin/activate
          python scripts/debug_fetch_logs.py run_id.txt

      - name: List files after analysis
        run: ls -la scripts/

      - name: List analysis files
        run: |
          ls -la ./scripts/*_analysis_*.txt

      - name: Upload analysis summary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: analysis-summary
          path: ./scripts/*_analysis_*.txt

      - name: Create check run and add annotations
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          annotations="[]"
          for file in ./scripts/*_analysis_*.txt; do
            summary=$(cat "$file")
            file_name=$(basename "$file")
            annotation=$(jq -n --arg path "$file_name" --arg message "$summary" '{
              path: $path,
              start_line: 1,
              end_line: 1,
              annotation_level: "warning",
              message: $message
            }')
            annotations=$(echo "$annotations" | jq --argjson annotation "$annotation" '. + [$annotation]')
          done

          jq -n --argjson annotations "$annotations" --arg sha "${{ github.event.workflow_run.head_sha }}" '{
            name: "my_annotation",
            head_sha: $sha,
            status: "completed",
            conclusion: "neutral",
            output: {
              title: "Log Analysis",
              summary: "Analysis summary of logs",
              annotations: $annotations
            }
          }' > payload.json

          check_run_response=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/check-runs \
          -d @payload.json)

          echo "Check Run Response: $check_run_response"

          # Verify the annotations were added correctly
          annotations_url=$(echo "$check_run_response" | jq -r .output.annotations_url)
          if [ -n "$annotations_url" ]; then
            annotations_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$annotations_url")
            echo "Annotations Response: $annotations_response"
          else
            echo "No annotations URL found in the response."
          fi

      - name: Check API rate limits
        run: |
          rate_limit_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/rate_limit)
          echo "Rate Limit Response: $rate_limit_response"




























# name: Log Collection and Analysis Workflow

# on:
#   workflow_run:
#     workflows: ["Main CI Workflow"]
#     types:
#       - completed

# permissions:
#   actions: read
#   contents: read

# jobs:
#   collect-logs:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Python 3.12
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.12'

#       - name: Install dependencies
#         run: |
#           python -m venv myenv
#           source myenv/bin/activate
#           pip install requests azure-storage-blob

#       - name: List files in workspace (after checkout)
#         run: ls -la

#       - name: Verify run_id.txt content
#         run: cat run_id.txt

#       - name: Upload logs to Azure
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           GITHUB_REPOSITORY: ${{ github.repository }}
#           REPO_OWNER: ${{ github.repository_owner }}
#           REPO_NAME: ${{ github.event.repository.name }}
#           AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
#           CUSTOM_SERVICE_COOKIE: ${{ secrets.CUSTOM_SERVICE_COOKIE }}
#         run: |
#           source myenv/bin/activate
#           python scripts/debug_fetch_logs.py run_id.txt

#       - name: List all files after analysis
#         run: |
#           cd scripts
#           ls -la
