name: Log Collection and Analysis Workflow

on:
  workflow_run:
    workflows: ["Main CI Workflow"]
    types:
      - completed

permissions:
  actions: read
  contents: read
  checks: write  # Ensure the workflow has permissions to create and update check runs

jobs:
  collect-logs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv myenv
          source myenv/bin/activate
          pip install requests azure-storage-blob jq

      - name: List files in workspace (after checkout)
        run: ls -la

      - name: Verify run_id.txt content
        run: cat run_id.txt

      - name: Upload logs and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
          CUSTOM_SERVICE_COOKIE: ${{ secrets.CUSTOM_SERVICE_COOKIE }}
        run: |
          source myenv/bin/activate
          python scripts/debug_fetch_logs.py run_id.txt

      - name: List files after analysis
        run: ls -la scripts/

      - name: List analysis files
        run: |
          ls -la ./scripts/*_analysis_*.txt

      - name: Upload analysis summary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: analysis-summary
          path: ./scripts/*_analysis_*.txt

      - name: Create check run and add annotations
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            const head_sha = process.env.GITHUB_SHA;
            const check_run = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Log Analysis',
              head_sha: head_sha,
              status: 'completed',
              conclusion: 'neutral',
              output: {
                title: 'Log Analysis',
                summary: 'Analysis summary of logs',
              }
            });
            const check_run_id = check_run.data.id;
            const files = fs.readdirSync('./scripts').filter(file => file.endsWith('_analysis_.txt'));
            for (const file of files) {
              const content = fs.readFileSync(path.join('./scripts', file), 'utf8');
              await github.rest.checks.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                check_run_id: check_run_id,
                output: {
                  title: 'Log Analysis',
                  summary: 'Analysis summary of logs',
                  annotations: [{
                    path: file,
                    start_line: 1,
                    end_line: 1,
                    annotation_level: 'warning',
                    message: content
                  }]
                }
              });
            }

      - name: Check API rate limits
        env:
          GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
        run: |
          rate_limit_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/rate_limit)
          echo "Rate Limit Response: $rate_limit_response"

      - name: Verify token permissions
        env:
          GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
        run: |
          curl -H "Authorization: token $GITHUB_TOKEN" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/user

      - name: Check token value
        env:
          GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
        run: echo $GITHUB_TOKEN


































# name: Log Collection and Analysis Workflow

# on:
#   workflow_run:
#     workflows: ["Main CI Workflow"]
#     types:
#       - completed

# permissions:
#   actions: read
#   contents: read

# jobs:
#   collect-logs:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Set up Python 3.12
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.12'

#       - name: Install dependencies
#         run: |
#           python -m venv myenv
#           source myenv/bin/activate
#           pip install requests azure-storage-blob

#       - name: List files in workspace (after checkout)
#         run: ls -la

#       - name: Verify run_id.txt content
#         run: cat run_id.txt

#       - name: Upload logs to Azure
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           GITHUB_REPOSITORY: ${{ github.repository }}
#           REPO_OWNER: ${{ github.repository_owner }}
#           REPO_NAME: ${{ github.event.repository.name }}
#           AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
#           CUSTOM_SERVICE_COOKIE: ${{ secrets.CUSTOM_SERVICE_COOKIE }}
#         run: |
#           source myenv/bin/activate
#           python scripts/debug_fetch_logs.py run_id.txt

#       - name: List all files after analysis
#         run: |
#           cd scripts
#           ls -la
