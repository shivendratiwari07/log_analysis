name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  actions: read
  contents: read

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m venv myenv
        source myenv/bin/activate
        pip install requests

    - name: Run openai.py script
      run: |
        source myenv/bin/activate
        python openai.py

    # - name: Trigger Logs Collection Workflow
    #   uses: peter-evans/repository-dispatch@v1
    #   with:
    #     token: ${{ secrets.PAT }}  # Use a PAT with repo scope
    #     event-type: collect-logs
    #     client-payload: '{"run_id": "${{ github.run_id }}"}'



  logs-download:
    name: Download GH action logs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.0.0
      - name: Download Logs
        uses: pawanbahuguna/action-logs@v1.0.1
        env: 
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GH_REPO: ${{ github.repository }}
      - name: Save logs to file
        run: |
          mkdir -p logs
          echo "$GITHUB_RUN_ID" > logs/run_id.txt
          curl -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/logs \
               -o logs/logs.zip
      - name: Upload logs
        uses: actions/upload-artifact@v2
        with:
          name: workflow-logs
          path: logs/logs.zip



# name: CI Workflow

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# permissions:
#   actions: read
#   contents: read

# jobs:
#   run-script:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Python 3.12
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'

#     - name: Install dependencies
#       run: |
#         python -m venv myenv
#         source myenv/bin/activate
#         pip install requests

#     - name: Run openai.py script
#       run: |
#         source myenv/bin/activate
#         python openai.py

#   build-and-test:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Python 3.12
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'

#     - name: Install dependencies
#       run: |
#         python -m venv myenv
#         source myenv/bin/activate
#         pip install -r requirements.txt

#     # - name: Run tests
#     #   run: |
#     #     source myenv/bin/activate
#     #     pytest --maxfail=5 --disable-warnings



#   upload-logs:
#     runs-on: ubuntu-latest
#     needs: [run-script]

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Python 3.12
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'

#     - name: Install dependencies
#       run: |
#         python -m venv myenv
#         source myenv/bin/activate
#         pip install requests azure-storage-blob

#     - name: Upload logs to Azure
#       env:
#         GITHUB_TOKEN: ${{ secrets.PAT }}
#         GITHUB_RUN_ID: ${{ github.run_id }}
#         GITHUB_REPOSITORY: ${{ github.repository }}
#         AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
#       run: |
#         source myenv/bin/activate
#         python scripts/upload_logs_to_azure.py
#   # debug-fetch-logs:
#   #   runs-on: ubuntu-latest
#   #   needs: [run-script, build-and-test]

#   #   steps:
#   #   - name: Checkout repository
#   #     uses: actions/checkout@v2

#   #   - name: Set up Python 3.12
#   #     uses: actions/setup-python@v4
#   #     with:
#   #       python-version: '3.12'

#   #   - name: Install dependencies
#   #     run: |
#   #       python -m venv myenv
#   #       source myenv/bin/activate
#   #       pip install requests

#   #   - name: Debug Fetch Logs
#   #     env:
#   #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   #       GITHUB_RUN_ID: ${{ github.run_id }}
#   #       GITHUB_REPOSITORY: ${{ github.repository }}
#   #     run: |
#   #       source myenv/bin/activate
#   #       python scripts/debug_fetch_logs.py
