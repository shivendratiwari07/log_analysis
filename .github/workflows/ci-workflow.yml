name: CI and Logs Collection Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  repository_dispatch:
    types: [collect-logs]

permissions:
  actions: read
  contents: read

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv myenv
          source myenv/bin/activate
          pip install requests

      - name: Run openai.py script
        run: |
          source myenv/bin/activate
          python openai.py

  upload-logs:
    needs: run-script
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv myenv
          source myenv/bin/activate
          pip install requests azure-storage-blob

      - name: Debug environment variables
        run: |
          echo "GITHUB_REPOSITORY: ${{ github.repository }}"
          echo "GITHUB_RUN_ID: ${{ github.run_id }}"
          echo "GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}"
          echo "REPO_OWNER: ${{ github.repository_owner }}"
          echo "REPO_NAME: ${{ github.event.repository.name }}"

      - name: Upload logs to Azure
        env:
          GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
          AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        run: |
          source myenv/bin/activate
          python scripts/debug_fetch_logs.py



          
  # debug-token-job:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: '3.12'
        
  #     - name: Encode and Print GITHUB_TOKEN
  #       run: |
  #         echo "GITHUB_TOKEN=$(echo -n ${{ secrets.FULL_ACCESS_DH_TOKEN }} | base64)" >> $GITHUB_ENV
          
  #     - name: Run debug script
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.FULL_ACCESS_DH_TOKEN }}
  #         GITHUB_RUN_ID: ${{ github.run_id }}
  #         REPO_OWNER: ${{ github.repository_owner }}
  #         REPO_NAME: ${{ github.event.repository.name }}
  #         ENCODED_GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
  #       run: |
        
  #         echo "Decoded GITHUB_TOKEN: $(echo ${{ env.ENCODED_GITHUB_TOKEN }} | base64 --decode)"



#python scripts/upload_logs_to_azure.py

      # - name: Download Logs
      #   run: |
      #     curl -L \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: Bearer ${{ secrets.GH_TOKEN1 }}" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/logs \
      #       --output logs/logs.log

      # - name: Upload logs
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: workflow-logs
      #     path: logs/logs.log






# name: CI Workflow

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# permissions:
#   actions: read
#   contents: read

# jobs:
#   run-script:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Python 3.12
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'

#     - name: Install dependencies
#       run: |
#         python -m venv myenv
#         source myenv/bin/activate
#         pip install requests

#     - name: Run openai.py script
#       run: |
#         source myenv/bin/activate
#         python openai.py

#   build-and-test:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Python 3.12
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'

#     - name: Install dependencies
#       run: |
#         python -m venv myenv
#         source myenv/bin/activate
#         pip install -r requirements.txt

#     # - name: Run tests
#     #   run: |
#     #     source myenv/bin/activate
#     #     pytest --maxfail=5 --disable-warnings



#   upload-logs:
#     runs-on: ubuntu-latest
#     needs: [run-script]

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v2

#     - name: Set up Python 3.12
#       uses: actions/setup-python@v4
#       with:
#         python-version: '3.12'

#     - name: Install dependencies
#       run: |
#         python -m venv myenv
#         source myenv/bin/activate
#         pip install requests azure-storage-blob

#     - name: Upload logs to Azure
#       env:
#         GITHUB_TOKEN: ${{ secrets.PAT }}
#         GITHUB_RUN_ID: ${{ github.run_id }}
#         GITHUB_REPOSITORY: ${{ github.repository }}
#         AZURE_STORAGE_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
#       run: |
#         source myenv/bin/activate
#         python scripts/upload_logs_to_azure.py
#   # debug-fetch-logs:
#   #   runs-on: ubuntu-latest
#   #   needs: [run-script, build-and-test]

#   #   steps:
#   #   - name: Checkout repository
#   #     uses: actions/checkout@v2

#   #   - name: Set up Python 3.12
#   #     uses: actions/setup-python@v4
#   #     with:
#   #       python-version: '3.12'

#   #   - name: Install dependencies
#   #     run: |
#   #       python -m venv myenv
#   #       source myenv/bin/activate
#   #       pip install requests

#   #   - name: Debug Fetch Logs
#   #     env:
#   #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   #       GITHUB_RUN_ID: ${{ github.run_id }}
#   #       GITHUB_REPOSITORY: ${{ github.repository }}
#   #     run: |
#   #       source myenv/bin/activate
#   #       python scripts/debug_fetch_logs.py
